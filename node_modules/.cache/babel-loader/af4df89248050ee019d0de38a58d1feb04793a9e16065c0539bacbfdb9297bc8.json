{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andre\\\\dlv-lite-bot\\\\dlb-lite-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CryptoJS from 'crypto-js'; // For AES encryption\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tg, setTg] = useState(null);\n  const [devMode, setDevMode] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [biometricToken, setBiometricToken] = useState('');\n  const [assets, setAssets] = useState([]);\n  const [newAsset, setNewAsset] = useState({\n    type: '',\n    details: '',\n    notes: ''\n  });\n  const [lastAction, setLastAction] = useState('');\n  const [lastError, setLastError] = useState('');\n\n  // Helper to show alerts using Telegram SDK when available, or window.alert when not\n  const showAlert = msg => {\n    // Try Telegram showAlert, but fall back to window.alert and swallow WebAppMethodUnsupported\n    try {\n      if (tg && typeof tg.showAlert === 'function') {\n        try {\n          tg.showAlert(msg);\n          return;\n        } catch (e) {\n          console.warn('tg.showAlert failed, falling back to window.alert', e);\n        }\n      }\n    } catch (e) {\n      console.warn('showAlert wrapper unexpected error', e);\n    }\n    try {\n      window.alert(msg);\n    } catch (e) {\n      console.error('window.alert failed', e);\n    }\n  };\n\n  // Safe wrappers for SecureStorage (fallback to localStorage if SecureStorage is unsupported)\n  const secureGetItem = (key, cb) => {\n    try {\n      if (tg && tg.SecureStorage && typeof tg.SecureStorage.getItem === 'function') {\n        try {\n          return tg.SecureStorage.getItem(key, cb);\n        } catch (e) {\n          console.warn('tg.SecureStorage.getItem threw, falling back to localStorage', e);\n        }\n      }\n    } catch (e) {\n      console.warn('secureGetItem unexpected error', e);\n    }\n    // async to mimic callback\n    setTimeout(() => {\n      try {\n        const v = localStorage.getItem(key);\n        cb(null, v);\n      } catch (err) {\n        cb(err);\n      }\n    }, 0);\n  };\n  const secureSetItem = (key, value, cb) => {\n    try {\n      if (tg && tg.SecureStorage && typeof tg.SecureStorage.setItem === 'function') {\n        try {\n          return tg.SecureStorage.setItem(key, value, cb);\n        } catch (e) {\n          console.warn('tg.SecureStorage.setItem threw, falling back to localStorage', e);\n        }\n      }\n    } catch (e) {\n      console.warn('secureSetItem unexpected error', e);\n    }\n    setTimeout(() => {\n      try {\n        localStorage.setItem(key, value);\n        cb(null, true);\n      } catch (err) {\n        cb(err, false);\n      }\n    }, 0);\n  };\n  const safeHaptic = type => {\n    try {\n      tg && tg.HapticFeedback && typeof tg.HapticFeedback.notificationOccurred === 'function' && tg.HapticFeedback.notificationOccurred(type);\n    } catch (e) {\n      console.warn('HapticFeedback failed', e);\n    }\n  };\n  const safeClose = () => {\n    try {\n      tg && typeof tg.close === 'function' && tg.close();\n    } catch (e) {\n      console.warn('tg.close failed', e);\n    }\n  };\n\n  // Create a simple fake Telegram WebApp for local dev mode so UI can be tested in a browser.\n  const createFakeTelegram = () => {\n    const handlers = {};\n    const storageKey = 'dlv_assets';\n    return {\n      themeParams: {\n        bg_color: '#ffffff',\n        text_color: '#000000'\n      },\n      ready: () => {},\n      expand: () => {},\n      onEvent: (name, cb) => {\n        handlers[name] = cb;\n      },\n      triggerEvent: (name, payload) => {\n        if (handlers[name]) handlers[name](payload);\n      },\n      showAlert: text => window.alert(text),\n      close: () => {},\n      HapticFeedback: {\n        notificationOccurred: t => console.log('haptic', t)\n      },\n      SecureStorage: {\n        getItem: (key, cb) => {\n          try {\n            const v = localStorage.getItem(key);\n            cb(null, v);\n          } catch (e) {\n            cb(e);\n          }\n        },\n        setItem: (key, value, cb) => {\n          try {\n            localStorage.setItem(key, value);\n            cb(null, true);\n          } catch (e) {\n            cb(e, false);\n          }\n        }\n      },\n      BiometricManager: {\n        isBiometricAvailable: true,\n        isAccessGranted: false,\n        init: cb => cb && cb(),\n        requestAccess: (opts, cb) => {\n          // Simulate user granting access in dev mode\n          setTimeout(() => cb && cb(true), 200);\n        },\n        authenticate: opts => {\n          // Simulate authentication success\n          setTimeout(() => {\n            const token = 'dev-biometric-token';\n            setIsAuthenticated(true);\n            setBiometricToken(token);\n            loadAssetsWithToken(token);\n          }, 200);\n        }\n      }\n    };\n  };\n  useEffect(() => {\n    var _window$Telegram;\n    // If URL contains ?dev=1 enable devMode automatically (useful on deployed preview)\n    try {\n      const params = new URLSearchParams(window.location.search);\n      if (params.get('dev') === '1') setDevMode(true);\n    } catch (e) {\n      // ignore\n    }\n    const telegram = (_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : _window$Telegram.WebApp;\n    if (telegram) {\n      setTg(telegram);\n      telegram.ready(); // Hide loading spinner\n      telegram.expand(); // Full height\n      // Theme adaptation\n      document.body.style.backgroundColor = telegram.themeParams.bg_color;\n      telegram.onEvent('themeChanged', () => {\n        document.body.style.backgroundColor = telegram.themeParams.bg_color;\n      });\n\n      // Validate initData (send to backend for HMAC check)\n      validateInitData(telegram.initData);\n\n      // Biometric setup\n      const biometric = telegram.BiometricManager;\n      biometric.init(() => {\n        if (biometric.isBiometricAvailable && !biometric.isAccessGranted) {\n          biometric.requestAccess({\n            reason: 'Secure your asset vault'\n          }, granted => {\n            if (granted) {\n              authenticateBiometrics();\n            }\n          });\n        } else if (biometric.isAccessGranted) {\n          authenticateBiometrics();\n        }\n      });\n      telegram.onEvent('biometricAuthRequested', event => {\n        setIsAuthenticated(event.isAuthenticated);\n        if (event.isAuthenticated) {\n          setBiometricToken(event.biometricToken);\n          // Load assets after auth\n          loadAssets();\n        }\n      });\n    }\n  }, []);\n\n  // When devMode is toggled on in a regular browser, create fake Telegram object\n  useEffect(() => {\n    if (devMode && !tg) {\n      const fake = createFakeTelegram();\n      setTg(fake);\n      // simulate immediate auth in dev mode for convenience\n      const token = 'dev-biometric-token';\n      setIsAuthenticated(true);\n      setBiometricToken(token);\n      // load assets from localStorage\n      loadAssetsWithToken(token);\n    }\n  }, [devMode]);\n\n  // Backend validation function (call your Vercel API)\n  const validateInitData = async initData => {\n    if (!tg) return; // Guard for local testing\n    try {\n      const response = await fetch('/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          initData\n        })\n      });\n      const {\n        valid\n      } = await response.json();\n      if (!valid) {\n        showAlert('Invalid session! Please restart.');\n        tg.close && tg.close();\n      }\n    } catch (error) {\n      console.error('Validation failed', error);\n      showAlert('Error validating session.');\n    }\n  };\n\n  // Function to authenticate\n  const authenticateBiometrics = () => {\n    var _tg$BiometricManager;\n    tg === null || tg === void 0 ? void 0 : (_tg$BiometricManager = tg.BiometricManager) === null || _tg$BiometricManager === void 0 ? void 0 : _tg$BiometricManager.authenticate({\n      reason: 'Unlock your vault'\n    });\n  };\n\n  // Encryption function\n  const encryptData = (data, key = biometricToken) => {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), key).toString();\n  };\n\n  // Decryption\n  const decryptData = (encrypted, key = biometricToken) => {\n    const bytes = CryptoJS.AES.decrypt(encrypted, key);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  };\n\n  // Load assets from SecureStorage using current biometric key\n  const loadAssets = () => {\n    if (!tg) return;\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\n      if (!err && value) {\n        try {\n          const decrypted = decryptData(value);\n          setAssets(decrypted);\n        } catch (e) {\n          showAlert('Error loading assets');\n        }\n      }\n    });\n  };\n\n  // Helper to load assets with a specific token (used in dev mode)\n  const loadAssetsWithToken = token => {\n    if (!tg) return;\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\n      if (!err && value) {\n        try {\n          const decrypted = decryptData(value, token);\n          setAssets(decrypted);\n        } catch (e) {\n          showAlert('Error loading assets');\n        }\n      }\n    });\n  };\n\n  // Save assets\n  const saveAsset = () => {\n    setLastError('');\n    setLastAction('saveAsset');\n    if (!tg) {\n      setLastError('Telegram API not available');\n      return showAlert('Telegram API not available');\n    }\n    if (assets.length >= 10) {\n      // Limit to 10\n      setLastError('Maximum assets reached');\n      return showAlert('Maximum 10 assets allowed');\n    }\n    const updatedAssets = [...assets, newAsset];\n    // optimistic update so UI is responsive\n    try {\n      setAssets(updatedAssets);\n      setNewAsset({\n        type: '',\n        details: '',\n        notes: ''\n      });\n      const encrypted = encryptData(updatedAssets);\n      tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\n        if (err || !success) {\n          console.error('SecureStorage.setItem failed', err);\n          setLastError(err ? String(err) : 'setItem returned false');\n          // revert optimistic update\n          setAssets(assets);\n          showAlert('Failed to save asset');\n        } else {\n          tg.HapticFeedback && tg.HapticFeedback.notificationOccurred && tg.HapticFeedback.notificationOccurred('success');\n          showAlert('Asset saved!');\n        }\n      });\n    } catch (ex) {\n      console.error('saveAsset exception', ex);\n      setLastError(String(ex));\n      setAssets(assets);\n      showAlert('Failed to save asset (exception)');\n    }\n  };\n\n  // Delete asset\n  const deleteAsset = index => {\n    setLastError('');\n    setLastAction('deleteAsset');\n    if (!tg) {\n      setLastError('Telegram API not available');\n      return showAlert('Telegram API not available');\n    }\n    const updatedAssets = assets.filter((_, i) => i !== index);\n    try {\n      // optimistic\n      const prior = assets;\n      setAssets(updatedAssets);\n      const encrypted = encryptData(updatedAssets);\n      tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\n        if (err || !success) {\n          console.error('SecureStorage.setItem failed', err);\n          setLastError(err ? String(err) : 'setItem returned false');\n          // revert\n          setAssets(prior);\n          showAlert('Failed to delete asset');\n        } else {\n          showAlert('Asset deleted!');\n        }\n      });\n    } catch (ex) {\n      console.error('deleteAsset exception', ex);\n      setLastError(String(ex));\n      showAlert('Failed to delete asset (exception)');\n    }\n  };\n\n  // If Telegram is not available, show a small UI to enable dev mode for local testing\n  if (!tg) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lite Digital Legacy Vault\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your app is not running inside Telegram. To test the UI in this browser, enable Dev Mode below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: devMode,\n          onChange: e => setDevMode(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), \" Enable Dev Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#666'\n        },\n        children: \"Dev Mode uses localStorage (encrypted with a temporary dev token) to simulate Telegram SecureStorage and biometrics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      color: tg.themeParams.text_color,\n      backgroundColor: tg.themeParams.bg_color\n    },\n    children: [devMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff3bf',\n        color: '#664d03',\n        padding: '8px 12px',\n        borderRadius: 6,\n        marginBottom: 12,\n        border: '1px solid #ffe58f'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Dev Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), \" \\u2014 running with a simulated Telegram API. Data is stored in localStorage.\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDevMode(false),\n        style: {\n          float: 'right',\n          background: 'transparent',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), devMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f6f8fa',\n        border: '1px solid #e1e4e8',\n        padding: 12,\n        borderRadius: 6,\n        marginBottom: 12,\n        fontSize: 13\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              // simulate biometric auth in dev mode\n              const token = 'dev-biometric-token';\n              setIsAuthenticated(true);\n              setBiometricToken(token);\n              loadAssetsWithToken(token);\n            },\n            style: {\n              marginRight: 8\n            },\n            children: \"Simulate Auth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          marginTop: 8\n        },\n        children: JSON.stringify({\n          devMode: !!devMode,\n          tg: !!tg,\n          isAuthenticated,\n          biometricToken: biometricToken ? '[redacted]' : '',\n          assetsLength: assets.length,\n          lastAction,\n          lastError\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lite Digital Legacy Vault\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Store and retrieve asset info securely (no passwords/seed phrases).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), isAuthenticated || devMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newAsset.type,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Asset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"crypto\",\n          children: \"Crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"domain\",\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newAsset.details,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          details: e.target.value\n        }),\n        placeholder: \"Details (e.g., wallet address)\",\n        style: {\n          width: '100%',\n          margin: '10px 0',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newAsset.notes,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          notes: e.target.value\n        }),\n        placeholder: \"Notes\",\n        style: {\n          width: '100%',\n          margin: '10px 0',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveAsset,\n        style: {\n          padding: '10px 20px',\n          margin: '10px 0'\n        },\n        children: \"Add Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: assets.map((asset, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '10px 0',\n            padding: '10px',\n            border: '1px solid #ccc',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [asset.type, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this), \" \", asset.details, asset.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Notes: \", asset.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteAsset(i),\n            style: {\n              marginTop: '5px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Authenticate with biometrics to access your vault.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"puhpqo1+QeEzJf/kC0a4RMQHg9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tg","setTg","devMode","setDevMode","isAuthenticated","setIsAuthenticated","biometricToken","setBiometricToken","assets","setAssets","newAsset","setNewAsset","type","details","notes","lastAction","setLastAction","lastError","setLastError","showAlert","msg","e","console","warn","window","alert","error","secureGetItem","key","cb","SecureStorage","getItem","setTimeout","v","localStorage","err","secureSetItem","value","setItem","safeHaptic","HapticFeedback","notificationOccurred","safeClose","close","createFakeTelegram","handlers","storageKey","themeParams","bg_color","text_color","ready","expand","onEvent","name","triggerEvent","payload","text","t","log","BiometricManager","isBiometricAvailable","isAccessGranted","init","requestAccess","opts","authenticate","token","loadAssetsWithToken","_window$Telegram","params","URLSearchParams","location","search","get","telegram","Telegram","WebApp","document","body","style","backgroundColor","validateInitData","initData","biometric","reason","granted","authenticateBiometrics","event","loadAssets","fake","response","fetch","method","headers","JSON","stringify","valid","json","_tg$BiometricManager","encryptData","data","AES","encrypt","toString","decryptData","encrypted","bytes","decrypt","parse","enc","Utf8","decrypted","saveAsset","length","updatedAssets","success","String","ex","deleteAsset","index","filter","_","i","prior","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","marginBottom","checked","onChange","target","color","background","borderRadius","border","onClick","float","cursor","fontSize","justifyContent","alignItems","marginRight","whiteSpace","marginTop","assetsLength","placeholder","width","margin","listStyle","map","asset","_c","$RefreshReg$"],"sources":["C:/Users/Andre/dlv-lite-bot/dlb-lite-bot/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CryptoJS from 'crypto-js'; // For AES encryption\r\n\r\nfunction App() {\r\n  const [tg, setTg] = useState(null);\r\n  const [devMode, setDevMode] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [biometricToken, setBiometricToken] = useState('');\r\n  const [assets, setAssets] = useState([]);\r\n  const [newAsset, setNewAsset] = useState({ type: '', details: '', notes: '' });\r\n  const [lastAction, setLastAction] = useState('');\r\n  const [lastError, setLastError] = useState('');\r\n\r\n  // Helper to show alerts using Telegram SDK when available, or window.alert when not\r\n  const showAlert = (msg) => {\r\n    // Try Telegram showAlert, but fall back to window.alert and swallow WebAppMethodUnsupported\r\n    try {\r\n      if (tg && typeof tg.showAlert === 'function') {\r\n        try {\r\n          tg.showAlert(msg);\r\n          return;\r\n        } catch (e) {\r\n          console.warn('tg.showAlert failed, falling back to window.alert', e);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn('showAlert wrapper unexpected error', e);\r\n    }\r\n    try { window.alert(msg); } catch (e) { console.error('window.alert failed', e); }\r\n  };\r\n\r\n  // Safe wrappers for SecureStorage (fallback to localStorage if SecureStorage is unsupported)\r\n  const secureGetItem = (key, cb) => {\r\n    try {\r\n      if (tg && tg.SecureStorage && typeof tg.SecureStorage.getItem === 'function') {\r\n        try {\r\n          return tg.SecureStorage.getItem(key, cb);\r\n        } catch (e) {\r\n          console.warn('tg.SecureStorage.getItem threw, falling back to localStorage', e);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn('secureGetItem unexpected error', e);\r\n    }\r\n    // async to mimic callback\r\n    setTimeout(() => {\r\n      try {\r\n        const v = localStorage.getItem(key);\r\n        cb(null, v);\r\n      } catch (err) {\r\n        cb(err);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const secureSetItem = (key, value, cb) => {\r\n    try {\r\n      if (tg && tg.SecureStorage && typeof tg.SecureStorage.setItem === 'function') {\r\n        try {\r\n          return tg.SecureStorage.setItem(key, value, cb);\r\n        } catch (e) {\r\n          console.warn('tg.SecureStorage.setItem threw, falling back to localStorage', e);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn('secureSetItem unexpected error', e);\r\n    }\r\n    setTimeout(() => {\r\n      try {\r\n        localStorage.setItem(key, value);\r\n        cb(null, true);\r\n      } catch (err) {\r\n        cb(err, false);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const safeHaptic = (type) => {\r\n    try {\r\n      tg && tg.HapticFeedback && typeof tg.HapticFeedback.notificationOccurred === 'function' && tg.HapticFeedback.notificationOccurred(type);\r\n    } catch (e) {\r\n      console.warn('HapticFeedback failed', e);\r\n    }\r\n  };\r\n\r\n  const safeClose = () => {\r\n    try { tg && typeof tg.close === 'function' && tg.close(); } catch (e) { console.warn('tg.close failed', e); }\r\n  };\r\n\r\n  // Create a simple fake Telegram WebApp for local dev mode so UI can be tested in a browser.\r\n  const createFakeTelegram = () => {\r\n    const handlers = {};\r\n    const storageKey = 'dlv_assets';\r\n    return {\r\n      themeParams: { bg_color: '#ffffff', text_color: '#000000' },\r\n      ready: () => {},\r\n      expand: () => {},\r\n      onEvent: (name, cb) => {\r\n        handlers[name] = cb;\r\n      },\r\n      triggerEvent: (name, payload) => {\r\n        if (handlers[name]) handlers[name](payload);\r\n      },\r\n      showAlert: (text) => window.alert(text),\r\n      close: () => {},\r\n      HapticFeedback: { notificationOccurred: (t) => console.log('haptic', t) },\r\n      SecureStorage: {\r\n        getItem: (key, cb) => {\r\n          try {\r\n            const v = localStorage.getItem(key);\r\n            cb(null, v);\r\n          } catch (e) {\r\n            cb(e);\r\n          }\r\n        },\r\n        setItem: (key, value, cb) => {\r\n          try {\r\n            localStorage.setItem(key, value);\r\n            cb(null, true);\r\n          } catch (e) {\r\n            cb(e, false);\r\n          }\r\n        },\r\n      },\r\n      BiometricManager: {\r\n        isBiometricAvailable: true,\r\n        isAccessGranted: false,\r\n        init: (cb) => cb && cb(),\r\n        requestAccess: (opts, cb) => {\r\n          // Simulate user granting access in dev mode\r\n          setTimeout(() => cb && cb(true), 200);\r\n        },\r\n        authenticate: (opts) => {\r\n          // Simulate authentication success\r\n          setTimeout(() => {\r\n            const token = 'dev-biometric-token';\r\n            setIsAuthenticated(true);\r\n            setBiometricToken(token);\r\n            loadAssetsWithToken(token);\r\n          }, 200);\r\n        },\r\n      },\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If URL contains ?dev=1 enable devMode automatically (useful on deployed preview)\r\n    try {\r\n      const params = new URLSearchParams(window.location.search);\r\n      if (params.get('dev') === '1') setDevMode(true);\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n\r\n    const telegram = window.Telegram?.WebApp;\r\n    if (telegram) {\r\n      setTg(telegram);\r\n      telegram.ready(); // Hide loading spinner\r\n      telegram.expand(); // Full height\r\n      // Theme adaptation\r\n      document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      telegram.onEvent('themeChanged', () => {\r\n        document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      });\r\n\r\n      // Validate initData (send to backend for HMAC check)\r\n      validateInitData(telegram.initData);\r\n\r\n      // Biometric setup\r\n      const biometric = telegram.BiometricManager;\r\n      biometric.init(() => {\r\n        if (biometric.isBiometricAvailable && !biometric.isAccessGranted) {\r\n          biometric.requestAccess({ reason: 'Secure your asset vault' }, (granted) => {\r\n            if (granted) {\r\n              authenticateBiometrics();\r\n            }\r\n          });\r\n        } else if (biometric.isAccessGranted) {\r\n          authenticateBiometrics();\r\n        }\r\n      });\r\n\r\n      telegram.onEvent('biometricAuthRequested', (event) => {\r\n        setIsAuthenticated(event.isAuthenticated);\r\n        if (event.isAuthenticated) {\r\n          setBiometricToken(event.biometricToken);\r\n          // Load assets after auth\r\n          loadAssets();\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // When devMode is toggled on in a regular browser, create fake Telegram object\r\n  useEffect(() => {\r\n    if (devMode && !tg) {\r\n      const fake = createFakeTelegram();\r\n      setTg(fake);\r\n      // simulate immediate auth in dev mode for convenience\r\n      const token = 'dev-biometric-token';\r\n      setIsAuthenticated(true);\r\n      setBiometricToken(token);\r\n      // load assets from localStorage\r\n      loadAssetsWithToken(token);\r\n    }\r\n  }, [devMode]);\r\n\r\n  // Backend validation function (call your Vercel API)\r\n  const validateInitData = async (initData) => {\r\n    if (!tg) return; // Guard for local testing\r\n    try {\r\n      const response = await fetch('/api/validate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ initData }),\r\n      });\r\n      const { valid } = await response.json();\r\n      if (!valid) {\r\n        showAlert('Invalid session! Please restart.');\r\n        tg.close && tg.close();\r\n      }\r\n    } catch (error) {\r\n      console.error('Validation failed', error);\r\n      showAlert('Error validating session.');\r\n    }\r\n  };\r\n\r\n  // Function to authenticate\r\n  const authenticateBiometrics = () => {\r\n    tg?.BiometricManager?.authenticate({ reason: 'Unlock your vault' });\r\n  };\r\n\r\n  // Encryption function\r\n  const encryptData = (data, key = biometricToken) => {\r\n    return CryptoJS.AES.encrypt(JSON.stringify(data), key).toString();\r\n  };\r\n\r\n  // Decryption\r\n  const decryptData = (encrypted, key = biometricToken) => {\r\n    const bytes = CryptoJS.AES.decrypt(encrypted, key);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  };\r\n\r\n  // Load assets from SecureStorage using current biometric key\r\n  const loadAssets = () => {\r\n    if (!tg) return;\r\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\r\n      if (!err && value) {\r\n        try {\r\n          const decrypted = decryptData(value);\r\n          setAssets(decrypted);\r\n        } catch (e) {\r\n          showAlert('Error loading assets');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Helper to load assets with a specific token (used in dev mode)\r\n  const loadAssetsWithToken = (token) => {\r\n    if (!tg) return;\r\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\r\n      if (!err && value) {\r\n        try {\r\n          const decrypted = decryptData(value, token);\r\n          setAssets(decrypted);\r\n        } catch (e) {\r\n          showAlert('Error loading assets');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Save assets\r\n  const saveAsset = () => {\r\n    setLastError('');\r\n    setLastAction('saveAsset');\r\n    if (!tg) {\r\n      setLastError('Telegram API not available');\r\n      return showAlert('Telegram API not available');\r\n    }\r\n    if (assets.length >= 10) { // Limit to 10\r\n      setLastError('Maximum assets reached');\r\n      return showAlert('Maximum 10 assets allowed');\r\n    }\r\n    const updatedAssets = [...assets, newAsset];\r\n    // optimistic update so UI is responsive\r\n    try {\r\n      setAssets(updatedAssets);\r\n      setNewAsset({ type: '', details: '', notes: '' });\r\n      const encrypted = encryptData(updatedAssets);\r\n      tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n        if (err || !success) {\r\n          console.error('SecureStorage.setItem failed', err);\r\n          setLastError(err ? String(err) : 'setItem returned false');\r\n          // revert optimistic update\r\n          setAssets(assets);\r\n          showAlert('Failed to save asset');\r\n        } else {\r\n          tg.HapticFeedback && tg.HapticFeedback.notificationOccurred && tg.HapticFeedback.notificationOccurred('success');\r\n          showAlert('Asset saved!');\r\n        }\r\n      });\r\n    } catch (ex) {\r\n      console.error('saveAsset exception', ex);\r\n      setLastError(String(ex));\r\n      setAssets(assets);\r\n      showAlert('Failed to save asset (exception)');\r\n    }\r\n  };\r\n\r\n  // Delete asset\r\n  const deleteAsset = (index) => {\r\n    setLastError('');\r\n    setLastAction('deleteAsset');\r\n    if (!tg) {\r\n      setLastError('Telegram API not available');\r\n      return showAlert('Telegram API not available');\r\n    }\r\n    const updatedAssets = assets.filter((_, i) => i !== index);\r\n    try {\r\n      // optimistic\r\n      const prior = assets;\r\n      setAssets(updatedAssets);\r\n      const encrypted = encryptData(updatedAssets);\r\n      tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n        if (err || !success) {\r\n          console.error('SecureStorage.setItem failed', err);\r\n          setLastError(err ? String(err) : 'setItem returned false');\r\n          // revert\r\n          setAssets(prior);\r\n          showAlert('Failed to delete asset');\r\n        } else {\r\n          showAlert('Asset deleted!');\r\n        }\r\n      });\r\n    } catch (ex) {\r\n      console.error('deleteAsset exception', ex);\r\n      setLastError(String(ex));\r\n      showAlert('Failed to delete asset (exception)');\r\n    }\r\n  };\r\n\r\n  // If Telegram is not available, show a small UI to enable dev mode for local testing\r\n  if (!tg) {\r\n    return (\r\n      <div style={{ padding: 20 }}>\r\n        <h1>Lite Digital Legacy Vault</h1>\r\n        <p>Your app is not running inside Telegram. To test the UI in this browser, enable Dev Mode below.</p>\r\n        <label style={{ display: 'block', marginBottom: 10 }}>\r\n          <input type=\"checkbox\" checked={devMode} onChange={(e) => setDevMode(e.target.checked)} /> Enable Dev Mode\r\n        </label>\r\n        <p style={{ color: '#666' }}>\r\n          Dev Mode uses localStorage (encrypted with a temporary dev token) to simulate Telegram SecureStorage and biometrics.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px', color: tg.themeParams.text_color, backgroundColor: tg.themeParams.bg_color }}>\r\n      {devMode && (\r\n        <div style={{ background: '#fff3bf', color: '#664d03', padding: '8px 12px', borderRadius: 6, marginBottom: 12, border: '1px solid #ffe58f' }}>\r\n          <strong>Dev Mode</strong> — running with a simulated Telegram API. Data is stored in localStorage.\r\n          <button onClick={() => setDevMode(false)} style={{ float: 'right', background: 'transparent', border: 'none', cursor: 'pointer' }}>Dismiss</button>\r\n        </div>\r\n      )}\r\n      {devMode && (\r\n        <div style={{ background: '#f6f8fa', border: '1px solid #e1e4e8', padding: 12, borderRadius: 6, marginBottom: 12, fontSize: 13 }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <strong>Debug</strong>\r\n            <div>\r\n              <button onClick={() => {\r\n                // simulate biometric auth in dev mode\r\n                const token = 'dev-biometric-token';\r\n                setIsAuthenticated(true);\r\n                setBiometricToken(token);\r\n                loadAssetsWithToken(token);\r\n              }} style={{ marginRight: 8 }}>Simulate Auth</button>\r\n            </div>\r\n          </div>\r\n          <pre style={{ whiteSpace: 'pre-wrap', marginTop: 8 }}>\r\n{JSON.stringify({ devMode: !!devMode, tg: !!tg, isAuthenticated, biometricToken: biometricToken ? '[redacted]' : '', assetsLength: assets.length, lastAction, lastError }, null, 2)}\r\n          </pre>\r\n        </div>\r\n      )}\r\n      <h1>Lite Digital Legacy Vault</h1>\r\n      <p>Store and retrieve asset info securely (no passwords/seed phrases).</p>\r\n  {(isAuthenticated || devMode) ? (\r\n        <>\r\n          <h2>Add New Asset</h2>\r\n          <select value={newAsset.type} onChange={(e) => setNewAsset({ ...newAsset, type: e.target.value })}>\r\n            <option value=\"\">Asset Type</option>\r\n            <option value=\"crypto\">Crypto</option>\r\n            <option value=\"domain\">Domain</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          <input\r\n            value={newAsset.details}\r\n            onChange={(e) => setNewAsset({ ...newAsset, details: e.target.value })}\r\n            placeholder=\"Details (e.g., wallet address)\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <textarea\r\n            value={newAsset.notes}\r\n            onChange={(e) => setNewAsset({ ...newAsset, notes: e.target.value })}\r\n            placeholder=\"Notes\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <button onClick={saveAsset} style={{ padding: '10px 20px', margin: '10px 0' }}>Add Asset</button>\r\n          <h2>Your Assets</h2>\r\n          <ul style={{ listStyle: 'none', padding: 0 }}>\r\n            {assets.map((asset, i) => (\r\n              <li key={i} style={{ margin: '10px 0', padding: '10px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n                <strong>{asset.type}:</strong> {asset.details}\r\n                {asset.notes && <p>Notes: {asset.notes}</p>}\r\n                <button onClick={() => deleteAsset(i)} style={{ marginTop: '5px' }}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>Authenticate with biometrics to access your vault.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}