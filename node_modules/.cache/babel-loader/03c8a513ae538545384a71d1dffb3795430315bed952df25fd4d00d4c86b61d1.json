{"ast":null,"code":"import _objectSpread from\"C:/Users/Andre/dlv-lite-bot/dlb-lite-bot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import CryptoJS from'crypto-js';// For AES encryption\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[tg,setTg]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[biometricToken,setBiometricToken]=useState('');const[assets,setAssets]=useState([]);const[newAsset,setNewAsset]=useState({type:'',details:'',notes:''});useEffect(()=>{var _window$Telegram;const telegram=(_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp;if(telegram){setTg(telegram);telegram.ready();// Hide loading spinner\ntelegram.expand();// Full height\n// Theme adaptation\ndocument.body.style.backgroundColor=telegram.themeParams.bg_color;telegram.onEvent('themeChanged',()=>{document.body.style.backgroundColor=telegram.themeParams.bg_color;});// Validate initData (send to backend for HMAC check)\nvalidateInitData(telegram.initData);// Biometric setup\nconst biometric=telegram.BiometricManager;biometric.init(()=>{if(biometric.isBiometricAvailable&&!biometric.isAccessGranted){biometric.requestAccess({reason:'Secure your asset vault'},granted=>{if(granted){authenticateBiometrics();}});}else if(biometric.isAccessGranted){authenticateBiometrics();}});telegram.onEvent('biometricAuthRequested',event=>{setIsAuthenticated(event.isAuthenticated);if(event.isAuthenticated){setBiometricToken(event.biometricToken);// Load assets after auth\nloadAssets();}});}},[]);// Backend validation function (call your Vercel API)\nconst validateInitData=async initData=>{try{const response=await fetch('/api/validate',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({initData})});const{valid}=await response.json();if(!valid){tg.showAlert('Invalid session! Please restart.');tg.close();}}catch(error){console.error('Validation failed',error);tg.showAlert('Error validating session.');}};// Function to authenticate\nconst authenticateBiometrics=()=>{tg.BiometricManager.authenticate({reason:'Unlock your vault'});};// Encryption function\nconst encryptData=data=>{return CryptoJS.AES.encrypt(JSON.stringify(data),biometricToken).toString();};// Decryption\nconst decryptData=encrypted=>{const bytes=CryptoJS.AES.decrypt(encrypted,biometricToken);return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));};// Load assets from SecureStorage\nconst loadAssets=()=>{tg.SecureStorage.getItem('dlv_assets',(err,value)=>{if(!err&&value){try{const decrypted=decryptData(value);setAssets(decrypted);}catch(e){tg.showAlert('Error loading assets');}}});};// Save assets\nconst saveAsset=()=>{if(assets.length>=10){// Limit to 10\ntg.showAlert('Maximum 10 assets allowed');return;}const updatedAssets=[...assets,newAsset];const encrypted=encryptData(updatedAssets);tg.SecureStorage.setItem('dlv_assets',encrypted,(err,success)=>{if(success){setAssets(updatedAssets);setNewAsset({type:'',details:'',notes:''});tg.HapticFeedback.notificationOccurred('success');tg.showAlert('Asset saved!');}});};// Delete asset\nconst deleteAsset=index=>{const updatedAssets=assets.filter((_,i)=>i!==index);const encrypted=encryptData(updatedAssets);tg.SecureStorage.setItem('dlv_assets',encrypted,(err,success)=>{if(success){setAssets(updatedAssets);tg.showAlert('Asset deleted!');}});};if(!tg)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading Mini App...\"});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',color:tg.themeParams.text_color,backgroundColor:tg.themeParams.bg_color},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Lite Digital Legacy Vault\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Store and retrieve asset info securely (no passwords/seed phrases).\"}),isAuthenticated?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Asset\"}),/*#__PURE__*/_jsxs(\"select\",{value:newAsset.type,onChange:e=>setNewAsset(_objectSpread(_objectSpread({},newAsset),{},{type:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Asset Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"crypto\",children:\"Crypto\"}),/*#__PURE__*/_jsx(\"option\",{value:\"domain\",children:\"Domain\"}),/*#__PURE__*/_jsx(\"option\",{value:\"other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"input\",{value:newAsset.details,onChange:e=>setNewAsset(_objectSpread(_objectSpread({},newAsset),{},{details:e.target.value})),placeholder:\"Details (e.g., wallet address)\",style:{width:'100%',margin:'10px 0',padding:'8px'}}),/*#__PURE__*/_jsx(\"textarea\",{value:newAsset.notes,onChange:e=>setNewAsset(_objectSpread(_objectSpread({},newAsset),{},{notes:e.target.value})),placeholder:\"Notes\",style:{width:'100%',margin:'10px 0',padding:'8px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:saveAsset,style:{padding:'10px 20px',margin:'10px 0'},children:\"Add Asset\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Your Assets\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyle:'none',padding:0},children:assets.map((asset,i)=>/*#__PURE__*/_jsxs(\"li\",{style:{margin:'10px 0',padding:'10px',border:'1px solid #ccc',borderRadius:'5px'},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[asset.type,\":\"]}),\" \",asset.details,asset.notes&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Notes: \",asset.notes]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteAsset(i),style:{marginTop:'5px'},children:\"Delete\"})]},i))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Authenticate with biometrics to access your vault.\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","CryptoJS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","tg","setTg","isAuthenticated","setIsAuthenticated","biometricToken","setBiometricToken","assets","setAssets","newAsset","setNewAsset","type","details","notes","_window$Telegram","telegram","window","Telegram","WebApp","ready","expand","document","body","style","backgroundColor","themeParams","bg_color","onEvent","validateInitData","initData","biometric","BiometricManager","init","isBiometricAvailable","isAccessGranted","requestAccess","reason","granted","authenticateBiometrics","event","loadAssets","response","fetch","method","headers","JSON","stringify","valid","json","showAlert","close","error","console","authenticate","encryptData","data","AES","encrypt","toString","decryptData","encrypted","bytes","decrypt","parse","enc","Utf8","SecureStorage","getItem","err","value","decrypted","e","saveAsset","length","updatedAssets","setItem","success","HapticFeedback","notificationOccurred","deleteAsset","index","filter","_","i","children","padding","color","text_color","onChange","_objectSpread","target","placeholder","width","margin","onClick","listStyle","map","asset","border","borderRadius","marginTop"],"sources":["C:/Users/Andre/dlv-lite-bot/dlb-lite-bot/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CryptoJS from 'crypto-js'; // For AES encryption\r\n\r\nfunction App() {\r\n  const [tg, setTg] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [biometricToken, setBiometricToken] = useState('');\r\n  const [assets, setAssets] = useState([]);\r\n  const [newAsset, setNewAsset] = useState({ type: '', details: '', notes: '' });\r\n\r\n  useEffect(() => {\r\n    const telegram = window.Telegram?.WebApp;\r\n    if (telegram) {\r\n      setTg(telegram);\r\n      telegram.ready(); // Hide loading spinner\r\n      telegram.expand(); // Full height\r\n      // Theme adaptation\r\n      document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      telegram.onEvent('themeChanged', () => {\r\n        document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      });\r\n\r\n      // Validate initData (send to backend for HMAC check)\r\n      validateInitData(telegram.initData);\r\n\r\n      // Biometric setup\r\n      const biometric = telegram.BiometricManager;\r\n      biometric.init(() => {\r\n        if (biometric.isBiometricAvailable && !biometric.isAccessGranted) {\r\n          biometric.requestAccess({ reason: 'Secure your asset vault' }, (granted) => {\r\n            if (granted) {\r\n              authenticateBiometrics();\r\n            }\r\n          });\r\n        } else if (biometric.isAccessGranted) {\r\n          authenticateBiometrics();\r\n        }\r\n      });\r\n\r\n      telegram.onEvent('biometricAuthRequested', (event) => {\r\n        setIsAuthenticated(event.isAuthenticated);\r\n        if (event.isAuthenticated) {\r\n          setBiometricToken(event.biometricToken);\r\n          // Load assets after auth\r\n          loadAssets();\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Backend validation function (call your Vercel API)\r\n  const validateInitData = async (initData) => {\r\n    try {\r\n      const response = await fetch('/api/validate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ initData }),\r\n      });\r\n      const { valid } = await response.json();\r\n      if (!valid) {\r\n        tg.showAlert('Invalid session! Please restart.');\r\n        tg.close();\r\n      }\r\n    } catch (error) {\r\n      console.error('Validation failed', error);\r\n      tg.showAlert('Error validating session.');\r\n    }\r\n  };\r\n\r\n  // Function to authenticate\r\n  const authenticateBiometrics = () => {\r\n    tg.BiometricManager.authenticate({ reason: 'Unlock your vault' });\r\n  };\r\n\r\n  // Encryption function\r\n  const encryptData = (data) => {\r\n    return CryptoJS.AES.encrypt(JSON.stringify(data), biometricToken).toString();\r\n  };\r\n\r\n  // Decryption\r\n  const decryptData = (encrypted) => {\r\n    const bytes = CryptoJS.AES.decrypt(encrypted, biometricToken);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  };\r\n\r\n  // Load assets from SecureStorage\r\n  const loadAssets = () => {\r\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\r\n      if (!err && value) {\r\n        try {\r\n          const decrypted = decryptData(value);\r\n          setAssets(decrypted);\r\n        } catch (e) {\r\n          tg.showAlert('Error loading assets');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Save assets\r\n  const saveAsset = () => {\r\n    if (assets.length >= 10) { // Limit to 10\r\n      tg.showAlert('Maximum 10 assets allowed');\r\n      return;\r\n    }\r\n    const updatedAssets = [...assets, newAsset];\r\n    const encrypted = encryptData(updatedAssets);\r\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n      if (success) {\r\n        setAssets(updatedAssets);\r\n        setNewAsset({ type: '', details: '', notes: '' });\r\n        tg.HapticFeedback.notificationOccurred('success');\r\n        tg.showAlert('Asset saved!');\r\n      }\r\n    });\r\n  };\r\n\r\n  // Delete asset\r\n  const deleteAsset = (index) => {\r\n    const updatedAssets = assets.filter((_, i) => i !== index);\r\n    const encrypted = encryptData(updatedAssets);\r\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n      if (success) {\r\n        setAssets(updatedAssets);\r\n        tg.showAlert('Asset deleted!');\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!tg) return <div>Loading Mini App...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', color: tg.themeParams.text_color, backgroundColor: tg.themeParams.bg_color }}>\r\n      <h1>Lite Digital Legacy Vault</h1>\r\n      <p>Store and retrieve asset info securely (no passwords/seed phrases).</p>\r\n      {isAuthenticated ? (\r\n        <>\r\n          <h2>Add New Asset</h2>\r\n          <select value={newAsset.type} onChange={(e) => setNewAsset({ ...newAsset, type: e.target.value })}>\r\n            <option value=\"\">Asset Type</option>\r\n            <option value=\"crypto\">Crypto</option>\r\n            <option value=\"domain\">Domain</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          <input\r\n            value={newAsset.details}\r\n            onChange={(e) => setNewAsset({ ...newAsset, details: e.target.value })}\r\n            placeholder=\"Details (e.g., wallet address)\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <textarea\r\n            value={newAsset.notes}\r\n            onChange={(e) => setNewAsset({ ...newAsset, notes: e.target.value })}\r\n            placeholder=\"Notes\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <button onClick={saveAsset} style={{ padding: '10px 20px', margin: '10px 0' }}>Add Asset</button>\r\n          <h2>Your Assets</h2>\r\n          <ul style={{ listStyle: 'none', padding: 0 }}>\r\n            {assets.map((asset, i) => (\r\n              <li key={i} style={{ margin: '10px 0', padding: '10px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n                <strong>{asset.type}:</strong> {asset.details}\r\n                {asset.notes && <p>Notes: {asset.notes}</p>}\r\n                <button onClick={() => deleteAsset(i)} style={{ marginTop: '5px' }}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>Authenticate with biometrics to access your vault.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}