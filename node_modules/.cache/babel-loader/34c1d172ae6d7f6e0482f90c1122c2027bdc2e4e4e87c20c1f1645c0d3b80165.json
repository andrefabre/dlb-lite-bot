{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andre\\\\dlv-lite-bot\\\\dlb-lite-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CryptoJS from 'crypto-js'; // For AES encryption\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tg, setTg] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [biometricToken, setBiometricToken] = useState('');\n  const [assets, setAssets] = useState([]);\n  const [newAsset, setNewAsset] = useState({\n    type: '',\n    details: '',\n    notes: ''\n  });\n  useEffect(() => {\n    var _window$Telegram;\n    const telegram = (_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : _window$Telegram.WebApp;\n    if (telegram) {\n      setTg(telegram);\n      telegram.ready(); // Hide loading spinner\n      telegram.expand(); // Full height\n      // Theme adaptation\n      document.body.style.backgroundColor = telegram.themeParams.bg_color;\n      telegram.onEvent('themeChanged', () => {\n        document.body.style.backgroundColor = telegram.themeParams.bg_color;\n      });\n\n      // Validate initData (send to backend for HMAC check)\n      validateInitData(telegram.initData);\n\n      // Biometric setup\n      const biometric = telegram.BiometricManager;\n      biometric.init(() => {\n        if (biometric.isBiometricAvailable && !biometric.isAccessGranted) {\n          biometric.requestAccess({\n            reason: 'Secure your asset vault'\n          }, granted => {\n            if (granted) {\n              authenticateBiometrics();\n            }\n          });\n        } else if (biometric.isAccessGranted) {\n          authenticateBiometrics();\n        }\n      });\n      telegram.onEvent('biometricAuthRequested', event => {\n        setIsAuthenticated(event.isAuthenticated);\n        if (event.isAuthenticated) {\n          setBiometricToken(event.biometricToken);\n          // Load assets after auth\n          loadAssets();\n        }\n      });\n    }\n  }, []);\n\n  // Backend validation function (call your Vercel API)\n  const validateInitData = async initData => {\n    try {\n      const response = await fetch('/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          initData\n        })\n      });\n      const {\n        valid\n      } = await response.json();\n      if (!valid) {\n        tg.showAlert('Invalid session! Please restart.');\n        tg.close();\n      }\n    } catch (error) {\n      console.error('Validation failed', error);\n      tg.showAlert('Error validating session.');\n    }\n  };\n\n  // Function to authenticate\n  const authenticateBiometrics = () => {\n    tg.BiometricManager.authenticate({\n      reason: 'Unlock your vault'\n    });\n  };\n\n  // Encryption function\n  const encryptData = data => {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), biometricToken).toString();\n  };\n\n  // Decryption\n  const decryptData = encrypted => {\n    const bytes = CryptoJS.AES.decrypt(encrypted, biometricToken);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  };\n\n  // Load assets from SecureStorage\n  const loadAssets = () => {\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\n      if (!err && value) {\n        try {\n          const decrypted = decryptData(value);\n          setAssets(decrypted);\n        } catch (e) {\n          tg.showAlert('Error loading assets');\n        }\n      }\n    });\n  };\n\n  // Save assets\n  const saveAsset = () => {\n    if (assets.length >= 10) {\n      // Limit to 10\n      tg.showAlert('Maximum 10 assets allowed');\n      return;\n    }\n    const updatedAssets = [...assets, newAsset];\n    const encrypted = encryptData(updatedAssets);\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\n      if (success) {\n        setAssets(updatedAssets);\n        setNewAsset({\n          type: '',\n          details: '',\n          notes: ''\n        });\n        tg.HapticFeedback.notificationOccurred('success');\n        tg.showAlert('Asset saved!');\n      }\n    });\n  };\n\n  // Delete asset\n  const deleteAsset = index => {\n    const updatedAssets = assets.filter((_, i) => i !== index);\n    const encrypted = encryptData(updatedAssets);\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\n      if (success) {\n        setAssets(updatedAssets);\n        tg.showAlert('Asset deleted!');\n      }\n    });\n  };\n  if (!tg) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Mini App...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      color: tg.themeParams.text_color,\n      backgroundColor: tg.themeParams.bg_color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lite Digital Legacy Vault\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Store and retrieve asset info securely (no passwords/seed phrases).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newAsset.type,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Asset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"crypto\",\n          children: \"Crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"domain\",\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newAsset.details,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          details: e.target.value\n        }),\n        placeholder: \"Details (e.g., wallet address)\",\n        style: {\n          width: '100%',\n          margin: '10px 0',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newAsset.notes,\n        onChange: e => setNewAsset({\n          ...newAsset,\n          notes: e.target.value\n        }),\n        placeholder: \"Notes\",\n        style: {\n          width: '100%',\n          margin: '10px 0',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveAsset,\n        style: {\n          padding: '10px 20px',\n          margin: '10px 0'\n        },\n        children: \"Add Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: assets.map((asset, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '10px 0',\n            padding: '10px',\n            border: '1px solid #ccc',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [asset.type, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), \" \", asset.details, asset.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Notes: \", asset.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteAsset(i),\n            style: {\n              marginTop: '5px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Authenticate with biometrics to access your vault.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8KYxlrJNrXH1FyFA2GICd7gzAb8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tg","setTg","isAuthenticated","setIsAuthenticated","biometricToken","setBiometricToken","assets","setAssets","newAsset","setNewAsset","type","details","notes","_window$Telegram","telegram","window","Telegram","WebApp","ready","expand","document","body","style","backgroundColor","themeParams","bg_color","onEvent","validateInitData","initData","biometric","BiometricManager","init","isBiometricAvailable","isAccessGranted","requestAccess","reason","granted","authenticateBiometrics","event","loadAssets","response","fetch","method","headers","JSON","stringify","valid","json","showAlert","close","error","console","authenticate","encryptData","data","AES","encrypt","toString","decryptData","encrypted","bytes","decrypt","parse","enc","Utf8","SecureStorage","getItem","err","value","decrypted","e","saveAsset","length","updatedAssets","setItem","success","HapticFeedback","notificationOccurred","deleteAsset","index","filter","_","i","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","color","text_color","onChange","target","placeholder","width","margin","onClick","listStyle","map","asset","border","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Andre/dlv-lite-bot/dlb-lite-bot/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CryptoJS from 'crypto-js'; // For AES encryption\r\n\r\nfunction App() {\r\n  const [tg, setTg] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [biometricToken, setBiometricToken] = useState('');\r\n  const [assets, setAssets] = useState([]);\r\n  const [newAsset, setNewAsset] = useState({ type: '', details: '', notes: '' });\r\n\r\n  useEffect(() => {\r\n    const telegram = window.Telegram?.WebApp;\r\n    if (telegram) {\r\n      setTg(telegram);\r\n      telegram.ready(); // Hide loading spinner\r\n      telegram.expand(); // Full height\r\n      // Theme adaptation\r\n      document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      telegram.onEvent('themeChanged', () => {\r\n        document.body.style.backgroundColor = telegram.themeParams.bg_color;\r\n      });\r\n\r\n      // Validate initData (send to backend for HMAC check)\r\n      validateInitData(telegram.initData);\r\n\r\n      // Biometric setup\r\n      const biometric = telegram.BiometricManager;\r\n      biometric.init(() => {\r\n        if (biometric.isBiometricAvailable && !biometric.isAccessGranted) {\r\n          biometric.requestAccess({ reason: 'Secure your asset vault' }, (granted) => {\r\n            if (granted) {\r\n              authenticateBiometrics();\r\n            }\r\n          });\r\n        } else if (biometric.isAccessGranted) {\r\n          authenticateBiometrics();\r\n        }\r\n      });\r\n\r\n      telegram.onEvent('biometricAuthRequested', (event) => {\r\n        setIsAuthenticated(event.isAuthenticated);\r\n        if (event.isAuthenticated) {\r\n          setBiometricToken(event.biometricToken);\r\n          // Load assets after auth\r\n          loadAssets();\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Backend validation function (call your Vercel API)\r\n  const validateInitData = async (initData) => {\r\n    try {\r\n      const response = await fetch('/api/validate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ initData }),\r\n      });\r\n      const { valid } = await response.json();\r\n      if (!valid) {\r\n        tg.showAlert('Invalid session! Please restart.');\r\n        tg.close();\r\n      }\r\n    } catch (error) {\r\n      console.error('Validation failed', error);\r\n      tg.showAlert('Error validating session.');\r\n    }\r\n  };\r\n\r\n  // Function to authenticate\r\n  const authenticateBiometrics = () => {\r\n    tg.BiometricManager.authenticate({ reason: 'Unlock your vault' });\r\n  };\r\n\r\n  // Encryption function\r\n  const encryptData = (data) => {\r\n    return CryptoJS.AES.encrypt(JSON.stringify(data), biometricToken).toString();\r\n  };\r\n\r\n  // Decryption\r\n  const decryptData = (encrypted) => {\r\n    const bytes = CryptoJS.AES.decrypt(encrypted, biometricToken);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  };\r\n\r\n  // Load assets from SecureStorage\r\n  const loadAssets = () => {\r\n    tg.SecureStorage.getItem('dlv_assets', (err, value) => {\r\n      if (!err && value) {\r\n        try {\r\n          const decrypted = decryptData(value);\r\n          setAssets(decrypted);\r\n        } catch (e) {\r\n          tg.showAlert('Error loading assets');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Save assets\r\n  const saveAsset = () => {\r\n    if (assets.length >= 10) { // Limit to 10\r\n      tg.showAlert('Maximum 10 assets allowed');\r\n      return;\r\n    }\r\n    const updatedAssets = [...assets, newAsset];\r\n    const encrypted = encryptData(updatedAssets);\r\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n      if (success) {\r\n        setAssets(updatedAssets);\r\n        setNewAsset({ type: '', details: '', notes: '' });\r\n        tg.HapticFeedback.notificationOccurred('success');\r\n        tg.showAlert('Asset saved!');\r\n      }\r\n    });\r\n  };\r\n\r\n  // Delete asset\r\n  const deleteAsset = (index) => {\r\n    const updatedAssets = assets.filter((_, i) => i !== index);\r\n    const encrypted = encryptData(updatedAssets);\r\n    tg.SecureStorage.setItem('dlv_assets', encrypted, (err, success) => {\r\n      if (success) {\r\n        setAssets(updatedAssets);\r\n        tg.showAlert('Asset deleted!');\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!tg) return <div>Loading Mini App...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', color: tg.themeParams.text_color, backgroundColor: tg.themeParams.bg_color }}>\r\n      <h1>Lite Digital Legacy Vault</h1>\r\n      <p>Store and retrieve asset info securely (no passwords/seed phrases).</p>\r\n      {isAuthenticated ? (\r\n        <>\r\n          <h2>Add New Asset</h2>\r\n          <select value={newAsset.type} onChange={(e) => setNewAsset({ ...newAsset, type: e.target.value })}>\r\n            <option value=\"\">Asset Type</option>\r\n            <option value=\"crypto\">Crypto</option>\r\n            <option value=\"domain\">Domain</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          <input\r\n            value={newAsset.details}\r\n            onChange={(e) => setNewAsset({ ...newAsset, details: e.target.value })}\r\n            placeholder=\"Details (e.g., wallet address)\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <textarea\r\n            value={newAsset.notes}\r\n            onChange={(e) => setNewAsset({ ...newAsset, notes: e.target.value })}\r\n            placeholder=\"Notes\"\r\n            style={{ width: '100%', margin: '10px 0', padding: '8px' }}\r\n          />\r\n          <button onClick={saveAsset} style={{ padding: '10px 20px', margin: '10px 0' }}>Add Asset</button>\r\n          <h2>Your Assets</h2>\r\n          <ul style={{ listStyle: 'none', padding: 0 }}>\r\n            {assets.map((asset, i) => (\r\n              <li key={i} style={{ margin: '10px 0', padding: '10px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n                <strong>{asset.type}:</strong> {asset.details}\r\n                {asset.notes && <p>Notes: {asset.notes}</p>}\r\n                <button onClick={() => deleteAsset(i)} style={{ marginTop: '5px' }}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>Authenticate with biometrics to access your vault.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}